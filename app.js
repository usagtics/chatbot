require('dotenv').config();
const axios = require('axios');
const { 
    createBot,
    createProvider, 
    createFlow, 
    addKeyword 
} = require('@bot-whatsapp/bot');

const QRPortalWeb = require('@bot-whatsapp/portal');
const BaileysProvider = require('@bot-whatsapp/provider/baileys');
const MockAdapter = require('@bot-whatsapp/database/mock');

const flujoMenu = addKeyword(['menu', 'opciones'])
    .addAnswer('üìå *Men√∫ de la Universidad de San Andr√©s de Guanajuato*\n\n' +
        '1Ô∏è‚É£ *Oferta Acad√©mica*\n   - ¬øQu√© carreras ofrecen? (Escribe: oferta academica)\n   - ¬øCu√°les son los requisitos de admisi√≥n? (Escribe: requisitos de admision)\n   - ¬øTienen maestr√≠as o doctorados? (Escribe: maestrias y doctorados)\n\n' +
        '2Ô∏è‚É£ *Inscripciones y Costos*\n   - ¬øCu√°ndo son las fechas de inscripci√≥n? (Escribe: inscripciones)\n   - ¬øCu√°nto cuesta la matr√≠cula y colegiatura? (Escribe: costos)\n   - ¬øExisten becas o apoyos financieros? (Escribe: becas)\n\n' +
        '3Ô∏è‚É£ *Vida Universitaria*\n   - ¬øQu√© actividades extracurriculares tienen? (Escribe: actividades extracurriculares)\n   - ¬øHay residencias estudiantiles? (Escribe: residencias estudiantiles)\n   - ¬øC√≥mo puedo unirme a un grupo estudiantil? (Escribe: grupos estudiantiles)\n\n' +
        '4Ô∏è‚É£ *Tr√°mites y Documentaci√≥n*\n   - ¬øC√≥mo solicito mi historial acad√©mico? (Escribe: historial academico)\n   - ¬øCu√°les son los requisitos para titularme? (Escribe: requisitos de titulacion)\n   - ¬øD√≥nde y c√≥mo puedo tramitar mi credencial universitaria? (Escribe: credencial universitaria)\n\n' +
        '5Ô∏è‚É£ *Contacto y Soporte*\n   - ¬øCu√°l es el n√∫mero de contacto de la universidad? (Escribe: contacto)\n   - ¬øTienen atenci√≥n en l√≠nea? (Escribe: atencion en linea)\n   - ¬øD√≥nde est√° ubicada la universidad? (Escribe: ubicacion)\n\n' +
        'Escribe el nombre de la opci√≥n sobre la que deseas m√°s informaci√≥n. Ejemplo: *inscripciones*');

const flujoOfertaAcademica = addKeyword(['oferta academica'])
    .addAnswer("üìö Contamos con una amplia oferta acad√©mica en diversas √°reas del conocimiento, desde ingenier√≠a hasta humanidades. Consulta nuestra p√°gina web para m√°s detalles.");

const flujoRequisitosAdmision = addKeyword(['requisitos de admision'])
    .addAnswer("üìÑ Para ingresar a nuestra universidad, debes presentar tu certificado de estudios, identificaci√≥n oficial y aprobar el examen de admisi√≥n.");

const flujoMaestriasDoctorados = addKeyword(['maestrias y doctorados'])
    .addAnswer("üéì Ofrecemos programas de maestr√≠a y doctorado en diversas disciplinas. Consulta nuestra convocatoria para conocer los requisitos y fechas de inscripci√≥n.");

const flujoInscripciones = addKeyword(['inscripciones'])
    .addAnswer("üóìÔ∏è Las inscripciones se realizan en periodos espec√≠ficos del a√±o. Visita nuestra web para conocer las fechas exactas.");

const flujoCostos = addKeyword(['costos'])
    .addAnswer("üí∞ Los costos de inscripci√≥n y colegiatura var√≠an seg√∫n la carrera. Contamos con opciones de financiamiento y becas para apoyar a nuestros estudiantes.");

const flujoBecas = addKeyword(['becas'])
    .addAnswer("üéì Existen diferentes tipos de becas, desde acad√©micas hasta deportivas. Inf√≥rmate sobre los requisitos y plazos de postulaci√≥n en nuestra oficina de becas.");

const flujoActividadesExtracurriculares = addKeyword(['actividades extracurriculares'])
    .addAnswer("üé≠ Fomentamos la participaci√≥n estudiantil con actividades culturales, deportivas y de emprendimiento. ¬°√önete y vive la experiencia universitaria al m√°ximo!");

const flujoResidenciasEstudiantiles = addKeyword(['residencias estudiantiles'])
    .addAnswer("üè° Disponemos de residencias dentro y fuera del campus. Cont√°ctanos para conocer disponibilidad y costos.");

const flujoGruposEstudiantiles = addKeyword(['grupos estudiantiles'])
    .addAnswer("ü§ù Hay m√∫ltiples grupos y asociaciones estudiantiles en los que puedes participar, desde debates hasta innovaci√≥n tecnol√≥gica.");

const flujoHistorialAcademico = addKeyword(['historial academico'])
    .addAnswer("üìÑ Puedes solicitar tu historial acad√©mico en la oficina de control escolar o descargarlo a trav√©s de nuestro portal en l√≠nea.");

const flujoRequisitosTitulacion = addKeyword(['requisitos de titulacion'])
    .addAnswer("üéì Para titularte, necesitas cumplir con el 100% de los cr√©ditos de tu carrera, servicio social y un trabajo final o examen profesional.");

const flujoCredencialUniversitaria = addKeyword(['credencial universitaria'])
    .addAnswer("üÜî La credencial universitaria se tramita en el √°rea de servicios escolares y es necesaria para el acceso a las instalaciones y bibliotecas.");

const flujoContacto = addKeyword(['contacto'])
    .addAnswer("üìû Puedes comunicarte con nosotros al tel√©fono (XXX) XXX-XXXX o enviarnos un correo a contacto@universidad.edu.");

const flujoAtencionEnLinea = addKeyword(['atencion en linea'])
    .addAnswer("üíª Contamos con atenci√≥n en l√≠nea a trav√©s de WhatsApp y nuestro portal web. Escr√≠benos y con gusto te atenderemos.");

const flujoUbicacion = addKeyword(['ubicacion'])
    .addAnswer("üìç Nos encontramos en Av. Universitaria #123, Guanajuato. ¬°Vis√≠tanos para conocer m√°s sobre nuestra instituci√≥n!");

const flujoPrincipal = addKeyword(['hola', 'hello', 'alo'])
    .addAnswer('üëã Bienvenido a la Universidad de San Andr√©s de Guanajuato, ¬øen qu√© podemos ayudarte?')
    .addAnswer('Escribe *menu* para ver las opciones disponibles.');

const flujoSecundario = addKeyword(['gracias'])
    .addAnswer('De nada, estamos para servirte. üòä');

// Funci√≥n principal para iniciar el bot
const main = async () => {
    try {
        const adapterDB = new MockAdapter();
        const adapterFlow = createFlow([
            flujoPrincipal, flujoMenu, flujoOfertaAcademica, flujoRequisitosAdmision,
            flujoMaestriasDoctorados, flujoInscripciones, flujoCostos, flujoBecas,
            flujoActividadesExtracurriculares, flujoResidenciasEstudiantiles, flujoGruposEstudiantiles,
            flujoHistorialAcademico, flujoRequisitosTitulacion, flujoCredencialUniversitaria,
            flujoContacto, flujoAtencionEnLinea, flujoUbicacion, flujoSecundario
        ]);
        const adapterProvider = createProvider(BaileysProvider);

        createBot({
            flow: adapterFlow,
            provider: adapterProvider,
            database: adapterDB,
        });

        try {
            await QRPortalWeb();  // Si esta funci√≥n es asincr√≥nica, manejarla aqu√≠
        } catch (error) {
            console.error('Error al ejecutar QRPortalWeb:', error);
        }
    } catch (error) {
        console.error('Error en la inicializaci√≥n del bot:', error);
    }
};

// Iniciar el bot
main();
